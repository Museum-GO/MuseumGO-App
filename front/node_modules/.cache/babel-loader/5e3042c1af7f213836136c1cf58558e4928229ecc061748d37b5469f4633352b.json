{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"helloWorld\"\n};\nconst _hoisted_2 = {\n  id: \"form\"\n};\nconst _hoisted_3 = {\n  id: \"message\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_6 = {\n  id: \"works\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.$t(\"HelloWorld.hello\")), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($data.variable), 1 /* TEXT */), _createCommentVNode(\" Variable change form \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newVariable = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newVariable]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.setVariable && $options.setVariable(...args))\n  }, _toDisplayString(_ctx.$t(\"HelloWorld.setVariable\")), 1 /* TEXT */)]), _createCommentVNode(\" Variable change message \"), _createElementVNode(\"div\", _hoisted_3, [$options.isVariableCorrect ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString(_ctx.$t(\"HelloWorld.variableCorrect\")), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString(_ctx.$t(\"HelloWorld.variableIncorrect\")), 1 /* TEXT */))]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.works, work => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"work\",\n      key: work._id\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(work.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(work.location.coordinates), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","_ctx","$t","$data","variable","_createCommentVNode","_hoisted_2","type","newVariable","$event","onClick","_cache","args","$options","setVariable","_hoisted_3","isVariableCorrect","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","works","work","key","_id","name","location","coordinates"],"sources":["D:\\OneDrive\\Documents\\MuseumGO\\MuseumGO-App\\front\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\r\n  <div id=\"helloWorld\">\r\n    <p>{{ $t(\"HelloWorld.hello\") }}</p>\r\n    <p>{{ variable }}</p>\r\n\r\n    <!-- Variable change form -->\r\n    <div id=\"form\">\r\n      <input type=\"number\" v-model=\"newVariable\" />\r\n      <button @click=\"setVariable\">{{ $t(\"HelloWorld.setVariable\") }}</button>\r\n    </div>\r\n\r\n    <!-- Variable change message -->\r\n    <div id=\"message\">\r\n      <p v-if=\"isVariableCorrect\">{{ $t(\"HelloWorld.variableCorrect\") }}</p>\r\n      <p v-else class=\"error\">{{ $t(\"HelloWorld.variableIncorrect\") }}</p>\r\n    </div>\r\n\r\n    <div id=\"works\">\r\n      <div class=\"work\" v-for=\"work in works\" :key=\"work._id\">\r\n        <h3>{{ work.name }}</h3>\r\n        <p>{{ work.location.coordinates }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from \"@/services/api\";\r\n\r\nexport default {\r\n  name: \"HelloWorld\",\r\n  data() {\r\n    return {\r\n      variable: 10,\r\n      newVariable: 20,\r\n      works: [],\r\n    };\r\n  },\r\n  created() {\r\n    // Called when the component is created.\r\n    // Good place to fetch data from API.\r\n\r\n    api.getWorks().then((works) => {\r\n      this.works = works;\r\n    });\r\n  },\r\n  mounted() {\r\n    // Called when the component has been mounted in the DOM.\r\n    // Good place to use jQuery or other DOM manipulations (maps, etc.)\r\n  },\r\n  methods: {\r\n    // Any methods you want to use in your component.\r\n    setVariable() {\r\n      this.variable = parseInt(this.newVariable);\r\n    },\r\n  },\r\n  computed: {\r\n    // Any computed properties you want to use in your component.\r\n    isVariableCorrect() {\r\n      return this.variable >= 0;\r\n    },\r\n  },\r\n  watch: {\r\n    // Any watchers you want to use in your component.\r\n    variable(newValue, oldValue) {\r\n      console.log(`Variable changed from ${oldValue} to ${newValue}`);\r\n    },\r\n  },\r\n\r\n  // Their is many other options you can use in your component.\r\n  // Learn more on hooks: https://vuejs.org/guide/essentials/lifecycle.html\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n// Scoped styles\r\n#helloWorld {\r\n  padding: 10px;\r\n  margin: 10px;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  #message {\r\n    color: green;\r\n    .error {\r\n      color: red;\r\n    }\r\n  }\r\n\r\n  #works {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n    max-width: 100%;\r\n    overflow: auto;\r\n    padding-bottom: 10px;\r\n\r\n    .work {\r\n      width: 200px;\r\n      min-width: 200px;\r\n      height: 150px;\r\n      padding: 10px;\r\n      margin: 5px;\r\n      border: 1px solid black;\r\n      border-radius: 5px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,EAAE,EAAC;AAAY;;EAKbA,EAAE,EAAC;AAAM;;EAMTA,EAAE,EAAC;AAAS;;;;;;EAELC,KAAK,EAAC;;;EAGbD,EAAE,EAAC;AAAO;;uBAhBjBE,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,mBAAA,CAAmC,WAAAC,gBAAA,CAA7BC,IAAA,CAAAC,EAAE,sCACRH,mBAAA,CAAqB,WAAAC,gBAAA,CAAfG,KAAA,CAAAC,QAAQ,kBAEdC,mBAAA,0BAA6B,EAC7BN,mBAAA,CAGM,OAHNO,UAGM,G,gBAFJP,mBAAA,CAA6C;IAAtCQ,IAAI,EAAC,QAAQ;+DAAUJ,KAAA,CAAAK,WAAW,GAAAC,MAAA;iDAAXN,KAAA,CAAAK,WAAW,E,GACzCT,mBAAA,CAAwE;IAA/DW,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;sBAAKX,IAAA,CAAAC,EAAE,2C,GAGpCG,mBAAA,6BAAgC,EAChCN,mBAAA,CAGM,OAHNgB,UAGM,GAFKF,QAAA,CAAAG,iBAAiB,I,cAA1BnB,mBAAA,CAAsE,KAAAoB,UAAA,EAAAjB,gBAAA,CAAvCC,IAAA,CAAAC,EAAE,mD,cACjCL,mBAAA,CAAoE,KAApEqB,UAAoE,EAAAlB,gBAAA,CAAzCC,IAAA,CAAAC,EAAE,kD,GAG/BH,mBAAA,CAKM,OALNoB,UAKM,I,kBAJJtB,mBAAA,CAGMuB,SAAA,QAAAC,WAAA,CAH2BlB,KAAA,CAAAmB,KAAK,EAAbC,IAAI;yBAA7B1B,mBAAA,CAGM;MAHDD,KAAK,EAAC,MAAM;MAAwB4B,GAAG,EAAED,IAAI,CAACE;QACjD1B,mBAAA,CAAwB,YAAAC,gBAAA,CAAjBuB,IAAI,CAACG,IAAI,kBAChB3B,mBAAA,CAAsC,WAAAC,gBAAA,CAAhCuB,IAAI,CAACI,QAAQ,CAACC,WAAW,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}